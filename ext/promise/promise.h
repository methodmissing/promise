#ifdef RUBY18
rb_define_method(rb_cPromise, "method_missing", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "inspect", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "tap", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "clone", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "public_methods", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "object_id", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "__send__", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "instance_variable_defined?", rb_promise_result_argc_one, 1);
rb_define_method(rb_cPromise, "equal?", rb_promise_result_argc_one, 1);
rb_define_method(rb_cPromise, "freeze", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "extend", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "send", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "methods", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "hash", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "dup", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "to_enum", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "instance_variables", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "eql?", rb_promise_result_argc_one, 1);
rb_define_method(rb_cPromise, "instance_eval", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "id", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "singleton_methods", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "taint", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "frozen?", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "instance_variable_get", rb_promise_result_argc_one, 1);
rb_define_method(rb_cPromise, "enum_for", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "instance_of?", rb_promise_result_argc_one, 1);
rb_define_method(rb_cPromise, "to_a", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "method", rb_promise_result_argc_one, 1);
rb_define_method(rb_cPromise, "type", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "instance_exec", rb_promise_result_argc_one, 1);
rb_define_method(rb_cPromise, "protected_methods", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "method_missing", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "==", rb_promise_result_argc_one, 1);
rb_define_method(rb_cPromise, "===", rb_promise_result_argc_one, 1);
rb_define_method(rb_cPromise, "instance_variable_set", rb_promise_result_argc_two, 2);
rb_define_method(rb_cPromise, "kind_of?", rb_promise_result_argc_one, 1);
rb_define_method(rb_cPromise, "respond_to?", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "to_s", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "class", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "__id__", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "tainted?", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "=~", rb_promise_result_argc_one, 1);
rb_define_method(rb_cPromise, "private_methods", rb_promise_result_argc_any, -1);
rb_define_method(rb_cPromise, "untaint", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "nil?", rb_promise_result_argc_none, 0);
rb_define_method(rb_cPromise, "is_a?", rb_promise_result_argc_one, 1);
#endif
